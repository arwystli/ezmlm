<?php
// $Id$
// $Name$
// for drupal 6.x

/**
 * @file
 * Allows users to subscribe to EZMLM mailing lists via a form in
 * a block or page.  List of mailing lists is defined by adminstrator.
 * Module sends subscription requests to each list's subscribe address.
 */

/**
 * Implementation of hook_help().
 */
function ezmlm_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description':
      return t('Utilities related to ezmlm, such as a box for subscribing to list(s).');
  }
}

/**
 * Implementation of hook_link().
 */
function ezmlm_link($type, $node = NULL, $teaser = FALSE) {
  $links = array();
  if ($type == 'page' && user_access('access content')) {
    $links[] = l(t('mailing %list', array('%list' => format_plural(_ezmlm_get_count(), 'list', 'lists'))), 'ezmlm', array('title' => t('Subscribe to mailing %list', array('%list' => format_plural(_ezmlm_get_count(), 'list', 'lists')))));
  }
  return $links;
}

/**
 * Implementation of hook_perm().
 */
function ezmlm_perm() {
  return array('administer ezmlm');
}

/**
 * Implementation of hook_menu().
 */
function ezmlm_menu() {
  $items['ezmlm/add'] = array(
    'title' => ('mailing lists'),
    'page callback' => 'ezmlm_block',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['ezmlm'] = array(
    'title' => ('Mailing lists'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ezmlm_subscribe_form'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/ezmlm'] = array(
    'title' => t('Ezmlm lists'),
    'description' => t('Ezmlm mailing lists management.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ezmlm_admin_settings'),
    'access arguments' => array('administer ezmlm'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'ezmlm.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_block().
 *
 * Generates a block with the subscription form.
 */

function ezmlm_block($op = 'list', $delta = 0) {
  switch ($op) {
    case 'list':
      $blocks[0]['info'] = t('ezmlm subscribe to list(s)');
      return $blocks;
    case 'view':
      if (arg(0) != 'ezmlm') {
        switch ($delta) {
          case 0:
            $block = "";
            if (strlen(trim(variable_get('ezmlmmailinglists', '')))) {
              $block['subject'] = variable_get('ezmlm_block_title', t('Subscriptions'));
              $block['content'] .= _ezmlm_page();
            }
            return $block;
        }
      }
      break;
    case 'configure':
    case 'save':
      return;
  }
}

/**
 * Generates the subscription form.
 *
 * @return
 *  HTML form.
 */
function ezmlm_subscribe_form() {
  global $user;

  if (_ezmlm_get_count()) {
    $lists = _ezmlm_get_lists();
    $form['subscribe'] = array(
      '#type' => 'markup',
      '#value' => variable_get('ezmlm_title', t('Mailing lists')),
    );
    $ct = 1;
    foreach ($lists as $list_text => $list_email) {
      $list_email = trim($list_email);
      $form['ezmlm_subscribe']["ezmlm_list_$ct"] = array(
        '#type' => 'checkbox',
        '#title' => $list_email,
        '#return_value' => $list_email,
      );
      $ct++;
    }
    $form['ezmlm_email'] = array (
      '#type' => 'textfield',
      '#title' => t('Your email address'),
      '#default_value' => ($user->mail ? $user->mail : ''),
      '#size' => 20,
      '#maxlength' => 80,
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Subscribe'));
  }
  else {
     $form['subscribe'] = array(
      '#type' => 'markup',
      '#value' => 'There are no lists available for subscription.',
    );
  }
  return $form;
}

/**
 * Validate form
 */
function ezmlm_subscribe_form_validate($form, &$form_state) {
  $arr = array();
  $lists = _ezmlm_get_lists();
  $ct = 1;
  foreach ($form_state['values'] as $key=>$address) {
    $address = trim($address);
    if( $key == "ezmlm_list_$ct" && $address && in_array($address, $lists)) {
       $arr[] = $address;
    }
    $ct++;
  }
  if ( count($arr) < 1 ) {
      form_set_error('', t('No lists selected!'));
  }
  if ( $error = user_validate_mail($form_state['values']['ezmlm_email'])) {
    form_set_error('ezmlm_email', $error);
  }
}

/**
 * Submit form
 */
function ezmlm_subscribe_form_submit($form, &$form_state) {
  $lists = _ezmlm_get_lists();
  $arr = array();
  $ct = 1;
  // get the selected mailing list addresses
  foreach ($form_state['values'] as $key=>$address) {
    $address = trim($address);
    if( $key == "ezmlm_list_$ct" && $address && in_array($address, $lists)) {
      $arr[] = $address;
   }
    $ct++;
  }
  $email = trim($form_state['values']['ezmlm_email']);
  $ret = _ezmlm_subscribe_process($arr, $email);
  if ( is_array($ret)) {
    $output = (t('Please check your mail at %mail to confirm registration of:', array('%mail' => $email)));
    drupal_set_message($output . "<br>" . implode('<br>', $ret));
  }
  else {
    drupal_set_message($ret, 'error');
  }
}

// internal functions
/**
 * Menu callback; presents the subscription form on a page, or processes
 * that form's input, whether from block or page.
 */
function _ezmlm_page() {
  $output = drupal_get_form('ezmlm_subscribe_form');
  return $output;
}

/**
 * Process the subscription form input; does some address checks and
 * sends mail to the EZMLM subscribe addresses for the lists.
 */
function _ezmlm_subscribe_process($subs, $mail) {
  $err = "";
  list($user_name, $user_domain) = split('@', $mail);
  $lists = _ezmlm_get_lists();
  $mylists = array();
  // loop over the lists
  foreach ($lists as $list_text => $list_email) {
    // loop over the subs
    foreach ($subs as $address) {
      if ($list_email == $address) {
        list($list_name, $list_domain) =  split('@', $list_email);
        // subscribe address for list formatted below
        $to = trim($list_name) .'-subscribe-'. trim($user_name) .'='. trim($user_domain) .'@'. trim($list_domain);
        mail($to, '', '');
        $mylists[] = trim($list_email);
      }
    }
  }
  return($mylists);
}


/**
 * Return current number of lists.
 * Use this instead of count(_ezmlm_get_lists()) because non-array counts as 1.
 */
function _ezmlm_get_count() {
  $lists = _ezmlm_get_lists();
  if (!is_array($lists)) {
    return 0;
  }
  else {
    return count($lists);
  }
}

/**
 * Return array of current mailing lists.
 */
function _ezmlm_get_lists() {
  return variable_get('ezmlmmailinglists', '');
}
